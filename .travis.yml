---
language: nix
env:
  global:
    - STORE=$HOME/nix-store
cache:
  directories:
    - $STORE
before_install:
  - sudo mkdir -p /etc/nix
  - echo "binary-caches = https://cache.nixos.org/ file://$STORE" | sudo tee -a /etc/nix/nix.conf > /dev/null
  - echo 'require-sigs = false' | sudo tee -a /etc/nix/nix.conf > /dev/null
before_cache:
  - mkdir -p $STORE
  - nix copy --to file://$STORE -f shell.nix buildInputs
install:
  - nix-env -if shell.nix
script:
  - nix-shell --pure --command "pylint _data/*.py"
  - #nix-shell --pure --command "flake8 _data/*.py"
  - #nix-shell --pure --command "LC_ALL=en_US.UTF-8 black --check _data/*.py"
  - #nix-shell --pure --command "make simulations"
  - #nix-shell --pure --command 'find . -name "*.ipynb" -type f -not -path "*/.ipynb_checkpoints/*" -exec touch {} \;'
  - #nix-shell --pure --command "make notebooks"
  - ##nix-shell --pure --command "touch _data/hexbin.yaml"
  - ##nix-shell --pure --command "make hexbin"
  - #nix-shell --pure --command "rm -rf ./_site"
  - #nix-shell --command "jekyll build -d ./_site/pfhub && htmlproofer --check-html --only-4xx --allow-hash-href --empty-alt-ignore --checks-to-ignore ImageCheck --file-ignore ./_site/pfhub/node_modules ./_site";
  - #nix-shell --pure --command "py.test --ignore=hackathons/hackathon1 --ignore=benchmarks --ignore=_data --nbval --sanitize-with sanitize.cfg"
  - #nix-shell --pure --command "coffeelint _includes/coffee/"
  - #nix-shell --pure --command "mocha _site/pfhub/js/test.js"
after_success:
  - #nix-shell --pure --command "rm -rf ./_site"
  - #nix-shell --pure --command "make simulations"
  - #nix-shell --pure --command "make notebooks"
  - #nix-shell --pure --command "make hexbin"
  - #nix-shell --pure --command "jekyll build --baseurl ''"
  - #export DOMAIN=random-cat-${TRAVIS_PULL_REQUEST}.surge.sh
  - #export SURGE_LOGIN="daniel.wheeler@nist.gov"
  - #export SURGE_TOKEN="3712d1678fabe65dfad576545befce2f"
  - #if [[ "$TRAVIS_PULL_REQUEST" != "false" ]]; then
    #  nix-shell --command "surge --project _site --domain ${DOMAIN}";
    #fi
  - echo "hello"
  - echo "${TRAVIS_PULL_REQUEST}"
  - echo "${TRAVIS_REPO_SLUG}"
  - echo "${GITHUB_TOKEN}";
  - if [[ "$TRAVIS_PULL_REQUEST" != "false" ]]; then
      echo "${GITHUB_TOKEN}";
      echo "${TRAVIS_REPO_SLUG}";
      curl -H "Authorization: token ${GITHUB_TOKEN}" -X POST -d "{\"body\": \"Hello world\"}" "https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/comments";
    fi
    #  echo ${TRAVIS_PULL_REQUEST};
    #curl -H "Authorization: token ${GITHUB_TOKEN}" -X POST -d "{\"body\": \"Hello world\"}" "https://api.github.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/comments";
    #fi
